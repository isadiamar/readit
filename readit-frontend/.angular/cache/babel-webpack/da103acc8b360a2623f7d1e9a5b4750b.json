{
  "ast": null,
  "code": "import { FormControl, Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../../shared/services/data.service\";\nimport * as i3 from \"../../../../core/auth.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/material/button\";\nexport let LoginFormComponent = /*#__PURE__*/(() => {\n  class LoginFormComponent {\n    constructor(formBuilder, data, authService, router) {\n      this.formBuilder = formBuilder;\n      this.data = data;\n      this.authService = authService;\n      this.router = router;\n      this.submitDisabled = true;\n    }\n\n    ngOnInit() {\n      this.loginForm = this.formBuilder.group({\n        email: new FormControl('', [Validators.required, Validators.pattern(\"^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\\\.[a-z]{2,4}$\")]),\n        password: new FormControl('', [Validators.required, Validators.minLength(6)])\n      });\n      this.loginForm.valueChanges.subscribe(_ => {\n        this.checkDisabled();\n      });\n      this.subscription = this.data.currentMessage.subscribe(message => this.message = message);\n    }\n\n    ngOnDestroy() {\n      this.subscription.unsubscribe();\n    }\n\n    checkDisabled() {\n      let email = this.loginForm.controls['email'].value;\n      let password = this.loginForm.controls['password'].value;\n      this.submitDisabled = email === '' || password === '' || !this.loginForm.valid;\n    }\n\n    submit() {\n      if (this.loginForm.valid) {\n        let email = this.loginForm.controls['email'].value;\n        let password = this.loginForm.controls['password'].value;\n        this.authService.login(email, password).subscribe(next => console.log(\"Success\"), error => this.clearFields(), () => this.router.navigate([\"myStories/new\"]));\n      }\n    }\n\n    clearFields() {\n      this.loginForm.reset();\n      Object.keys(this.loginForm.controls).forEach(key => {\n        var _a;\n\n        (_a = this.loginForm.get(key)) === null || _a === void 0 ? void 0 : _a.setErrors(null);\n      });\n    }\n\n    newMessage(message) {\n      this.data.changeMessage(message);\n    }\n\n  }\n\n  LoginFormComponent.ɵfac = function LoginFormComponent_Factory(t) {\n    return new (t || LoginFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.WelcomeService), i0.ɵɵdirectiveInject(i3.AuthService), i0.ɵɵdirectiveInject(i4.Router));\n  };\n\n  LoginFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginFormComponent,\n    selectors: [[\"app-login-form\"]],\n    decls: 22,\n    vars: 2,\n    consts: [[1, \"auth\"], [3, \"formGroup\"], [1, \"control\"], [\"appearance\", \"outline\"], [\"formControlName\", \"email\", \"matInput\", \"\", \"placeholder\", \"email@email.com\", \"required\", \"\", \"type\", \"email\"], [\"formControlName\", \"password\", \"matInput\", \"\", \"placeholder\", \"password\", \"required\", \"\", \"type\", \"password\"], [1, \"actions\"], [\"mat-flat-button\", \"\", \"color\", \"accent\", 3, \"disabled\", \"click\"], [1, \"formLink\"], [3, \"click\"]],\n    template: function LoginFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"section\", 0);\n        i0.ɵɵelementStart(1, \"h1\");\n        i0.ɵɵtext(2, \"Welcome back!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"h2\");\n        i0.ɵɵtext(4, \"It's good to see you\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"form\", 1);\n        i0.ɵɵelementStart(6, \"div\", 2);\n        i0.ɵɵelementStart(7, \"mat-form-field\", 3);\n        i0.ɵɵelementStart(8, \"mat-label\");\n        i0.ɵɵtext(9, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 2);\n        i0.ɵɵelementStart(12, \"mat-form-field\", 3);\n        i0.ɵɵelementStart(13, \"mat-label\");\n        i0.ɵɵtext(14, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 6);\n        i0.ɵɵelementStart(17, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function LoginFormComponent_Template_button_click_17_listener() {\n          return ctx.submit();\n        });\n        i0.ɵɵtext(18, \"Log in\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\", 8);\n        i0.ɵɵelementStart(20, \"a\", 9);\n        i0.ɵɵlistener(\"click\", function LoginFormComponent_Template_a_click_20_listener() {\n          return ctx.newMessage(\"signup\");\n        });\n        i0.ɵɵtext(21, \"Not register? Do it here\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"disabled\", ctx.submitDisabled);\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i5.MatFormField, i5.MatLabel, i1.DefaultValueAccessor, i6.MatInput, i1.NgControlStatus, i1.FormControlName, i1.RequiredValidator, i7.MatButton],\n    styles: [\".auth[_ngcontent-%COMP%]{width:25rem;border-radius:2%;background-color:#fff;box-shadow:0 1px 4px #0003;border:3px solid #989696;padding:3rem 1rem;text-align:center}.auth[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{font-family:Roboto,sans-serif;font-size:12px;color:#d44171;font-weight:bolder;cursor:pointer}.auth[_ngcontent-%COMP%]   .formLink[_ngcontent-%COMP%]{display:flex;align-items:flex-start;margin-left:2.8rem;margin-bottom:1rem}.auth[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%], .auth[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%], .actions[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{font-family:\\\"Quicksand\\\",sans-serif;text-align:center;font-weight:bold;letter-spacing:2px;text-transform:uppercase}.auth[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{margin-top:1rem;font-size:30px}.auth[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{font-size:15px;margin-bottom:2rem}mat-form-field[_ngcontent-%COMP%]{border-radius:15px;border-color:#d2225d}.actions[_ngcontent-%COMP%]{margin-top:1rem;display:flex;flex-direction:column;align-items:center}.actions[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{width:80%;margin-bottom:1rem;cursor:pointer;font:inherit;border-radius:5px;padding:1rem 2.5rem}mat-form-field[_ngcontent-%COMP%]{width:80%}\"]\n  });\n  return LoginFormComponent;\n})();",
  "map": null,
  "metadata": {},
  "sourceType": "module"
}
